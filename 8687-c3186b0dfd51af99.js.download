"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8687],{25731:(e,t,r)=>{r.d(t,{A3:()=>g,Bp:()=>S,Et:()=>R,Ey:()=>c,GB:()=>p,Ih:()=>m,JQ:()=>i,KX:()=>A,MA:()=>_,Nw:()=>f,U1:()=>l,VK:()=>j,VL:()=>w,XY:()=>y,_L:()=>v,e4:()=>k,eD:()=>E,fG:()=>h,fu:()=>x,fw:()=>T,gA:()=>d,m9:()=>b,uV:()=>I,vr:()=>u});var o=r(52643);let a="https://api.suna.so/api",n=new Set,s=new Map;class c extends Error{constructor(e,t,r){super(r||t.message||"Billing Error: ".concat(e)),this.name="BillingError",this.status=e,this.detail=t,Object.setPrototypeOf(this,c.prototype)}}let i=async()=>{try{let e=(0,o.U)(),{data:t,error:r}=await e.auth.getUser();if(r)return console.error("Error getting current user:",r),[];if(!t.user)return console.log("[API] No user logged in, returning empty projects array"),[];let{data:a,error:n}=await e.from("projects").select("*").eq("account_id",t.user.id);if(n){if("42501"===n.code&&n.message.includes("has_role_on_account"))return console.error("Permission error: User does not have proper account access"),[];throw n}console.log("[API] Raw projects from DB:",null==a?void 0:a.length,a);let s=(a||[]).map(e=>({id:e.project_id,name:e.name||"",description:e.description||"",account_id:e.account_id,created_at:e.created_at,updated_at:e.updated_at,sandbox:e.sandbox||{id:"",pass:"",vnc_preview:"",sandbox_url:""}}));return console.log("[API] Mapped projects for frontend:",s.length),s}catch(e){return console.error("Error fetching projects:",e),[]}},l=async e=>{let t=(0,o.U)();try{var r;let{data:o,error:n}=await t.from("projects").select("*").eq("project_id",e).single();if(n){if("PGRST116"===n.code)throw Error("Project not found or not accessible: ".concat(e));throw n}console.log("Raw project data from database:",o),(null==(r=o.sandbox)?void 0:r.id)&&(async()=>{try{let{data:{session:r}}=await t.auth.getSession(),o={"Content-Type":"application/json"};(null==r?void 0:r.access_token)&&(o.Authorization="Bearer ".concat(r.access_token)),console.log("Ensuring sandbox is active for project ".concat(e,"..."));let n=await fetch("".concat(a,"/project/").concat(e,"/sandbox/ensure-active"),{method:"POST",headers:o});if(n.ok)console.log("Sandbox activation successful");else{let e=await n.text().catch(()=>"No error details available");console.warn("Failed to ensure sandbox is active: ".concat(n.status," ").concat(n.statusText),e)}}catch(e){console.warn("Failed to ensure sandbox is active:",e)}})();let s={id:o.project_id,name:o.name||"",description:o.description||"",account_id:o.account_id,is_public:o.is_public||!1,created_at:o.created_at,sandbox:o.sandbox||{id:"",pass:"",vnc_preview:"",sandbox_url:""}};return console.log("Mapped project data for frontend:",s),s}catch(t){throw console.error("Error fetching project ".concat(e,":"),t),t}},d=async(e,t)=>{let r=(0,o.U)();if(!t){let{data:e,error:o}=await r.auth.getUser();if(o)throw o;if(!e.user)throw Error("You must be logged in to create a project");t=e.user.id}let{data:a,error:n}=await r.from("projects").insert({name:e.name,description:e.description||null,account_id:t}).select().single();if(n)throw n;return{id:a.project_id,name:a.name,description:a.description||"",account_id:a.account_id,created_at:a.created_at,sandbox:{id:"",pass:"",vnc_preview:""}}},u=async(e,t)=>{let r=(0,o.U)();if(console.log("Updating project with ID:",e),console.log("Update data:",t),!e||""===e)throw console.error("Attempted to update project with invalid ID:",e),Error("Cannot update project: Invalid project ID");let{data:a,error:n}=await r.from("projects").update(t).eq("project_id",e).select().single();if(n)throw console.error("Error updating project:",n),n;if(!a)throw Error("No data returned from update");return window.dispatchEvent(new CustomEvent("project-updated",{detail:{projectId:e,updatedData:{id:a.project_id,name:a.name,description:a.description}}})),{id:a.project_id,name:a.name,description:a.description||"",account_id:a.account_id,created_at:a.created_at,sandbox:a.sandbox||{id:"",pass:"",vnc_preview:"",sandbox_url:""}}},g=async e=>{let t=(0,o.U)(),{data:r,error:a}=await t.auth.getUser();if(a)return console.error("Error getting current user:",a),[];if(!r.user)return console.log("[API] No user logged in, returning empty threads array"),[];let n=t.from("threads").select("*");n=n.eq("account_id",r.user.id),e&&(console.log("[API] Filtering threads by project_id:",e),n=n.eq("project_id",e));let{data:s,error:c}=await n;if(c)throw console.error("[API] Error fetching threads:",c),c;return console.log("[API] Raw threads from DB:",null==s?void 0:s.length,s),(s||[]).map(e=>({thread_id:e.thread_id,account_id:e.account_id,project_id:e.project_id,created_at:e.created_at,updated_at:e.updated_at}))},h=async e=>{let t=(0,o.U)(),{data:r,error:a}=await t.from("threads").select("*").eq("thread_id",e).single();if(a)throw a;return r},f=async e=>{let t=(0,o.U)(),{data:{user:r}}=await t.auth.getUser();if(!r)throw Error("You must be logged in to create a thread");let{data:a,error:n}=await t.from("threads").insert({project_id:e,account_id:r.id}).select().single();if(n)throw n;return a},p=async(e,t)=>{let r=(0,o.U)(),{error:a}=await r.from("messages").insert({thread_id:e,type:"user",is_llm_message:!0,content:JSON.stringify({role:"user",content:t})});if(a)throw console.error("Error adding user message:",a),Error("Error adding message: ".concat(a.message))},w=async e=>{let t=(0,o.U)(),{data:r,error:a}=await t.from("messages").select("*").eq("thread_id",e).neq("type","cost").neq("type","summary").order("created_at",{ascending:!0});if(a)throw console.error("Error fetching messages:",a),Error("Error getting messages: ".concat(a.message));return console.log("[API] Messages fetched:",r),r||[]},m=async(e,t)=>{try{let r=(0,o.U)(),{data:{session:n}}=await r.auth.getSession();if(!(null==n?void 0:n.access_token))throw Error("No access token available");if(!a)throw Error("Backend URL is not configured. Set NEXT_PUBLIC_BACKEND_URL in your environment.");console.log("[API] Starting agent for thread ".concat(e," using ").concat(a,"/thread/").concat(e,"/agent/start"));let s=await fetch("".concat(a,"/thread/").concat(e,"/agent/start"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(n.access_token)},cache:"no-store",body:JSON.stringify(t||{})});if(!s.ok){if(402===s.status)try{let e=await s.json();console.error("[API] Billing error starting agent (402):",e);let t=(null==e?void 0:e.detail)||{message:"Payment Required"};throw"string"!=typeof t.message&&(t.message="Payment Required"),new c(s.status,t)}catch(e){throw console.error("[API] Could not parse 402 error response body:",e),new c(s.status,{message:"Payment Required"},"Error starting agent: ".concat(s.statusText," (402)"))}let e=await s.text().catch(()=>"No error details available");throw console.error("[API] Error starting agent: ".concat(s.status," ").concat(s.statusText),e),Error("Error starting agent: ".concat(s.statusText," (").concat(s.status,")"))}return s.json()}catch(e){if(e instanceof c)throw e;if(console.error("[API] Failed to start agent:",e),e instanceof TypeError&&e.message.includes("Failed to fetch"))throw Error("Cannot connect to backend server. Please check your internet connection and make sure the backend is running.");throw e}},E=async e=>{n.add(e);let t=s.get(e);t&&(console.log("[API] Closing existing stream for ".concat(e," before stopping agent")),t.close(),s.delete(e));let r=(0,o.U)(),{data:{session:c}}=await r.auth.getSession();if(!(null==c?void 0:c.access_token))throw Error("No access token available");let i=await fetch("".concat(a,"/agent-run/").concat(e,"/stop"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(c.access_token)},cache:"no-store"});if(!i.ok)throw Error("Error stopping agent: ".concat(i.statusText))},v=async e=>{if(console.log("[API] Requesting agent status for ".concat(e)),n.has(e))throw console.log("[API] Agent run ".concat(e," is known to be non-running, returning error")),Error("Agent run ".concat(e," is not running"));try{let t=(0,o.U)(),{data:{session:r}}=await t.auth.getSession();if(!(null==r?void 0:r.access_token))throw console.error("[API] No access token available for getAgentStatus"),Error("No access token available");let s="".concat(a,"/agent-run/").concat(e);console.log("[API] Fetching from: ".concat(s));let c=await fetch(s,{headers:{Authorization:"Bearer ".concat(r.access_token)},cache:"no-store"});if(!c.ok){let t=await c.text().catch(()=>"No error details available");throw console.error("[API] Error getting agent status: ".concat(c.status," ").concat(c.statusText),t),404===c.status&&n.add(e),Error("Error getting agent status: ".concat(c.statusText," (").concat(c.status,")"))}let i=await c.json();return console.log("[API] Successfully got agent status:",i),"running"!==i.status&&n.add(e),i}catch(e){throw console.error("[API] Failed to get agent status:",e),e}},b=async e=>{try{let t=(0,o.U)(),{data:{session:r}}=await t.auth.getSession();if(!(null==r?void 0:r.access_token))throw Error("No access token available");let n=await fetch("".concat(a,"/thread/").concat(e,"/agent-runs"),{headers:{Authorization:"Bearer ".concat(r.access_token)},cache:"no-store"});if(!n.ok)throw Error("Error getting agent runs: ".concat(n.statusText));return(await n.json()).agent_runs||[]}catch(e){throw console.error("Failed to get agent runs:",e),e}},_=(e,t)=>{if(console.log("[STREAM] streamAgent called for ".concat(e)),n.has(e))return console.log("[STREAM] Agent run ".concat(e," is known to be non-running, not creating stream")),setTimeout(()=>{t.onError("Agent run ".concat(e," is not running")),t.onClose()},0),()=>{};let r=s.get(e);r&&(console.log("[STREAM] Stream already exists for ".concat(e,", closing it first")),r.close(),s.delete(e));try{return(async()=>{try{let r=await v(e);if("running"!==r.status){console.log("[STREAM] Agent run ".concat(e," is not running (status: ").concat(r.status,"), not creating stream")),n.add(e),t.onError("Agent run ".concat(e," is not running (status: ").concat(r.status,")")),t.onClose();return}}catch(o){console.error("[STREAM] Error verifying agent run ".concat(e,":"),o);let r=o instanceof Error?o.message:String(o);(r.includes("not found")||r.includes("404")||r.includes("does not exist"))&&(console.log("[STREAM] Agent run ".concat(e," not found, not creating stream")),n.add(e)),t.onError(r),t.onClose();return}let r=(0,o.U)(),{data:{session:c}}=await r.auth.getSession();if(!(null==c?void 0:c.access_token)){console.error("[STREAM] No auth token available"),t.onError(Error("Authentication required")),t.onClose();return}let i=new URL("".concat(a,"/agent-run/").concat(e,"/stream"));i.searchParams.append("token",c.access_token),console.log("[STREAM] Creating EventSource for ".concat(e));let l=new EventSource(i.toString());s.set(e,l),l.onopen=()=>{console.log("[STREAM] Connection opened for ".concat(e))},l.onmessage=r=>{try{let o=r.data;if(o.includes('"type":"ping"'))return;if(console.log("[STREAM] Received data for ".concat(e,": ").concat(o.substring(0,100)).concat(o.length>100?"...":"")),!o||""===o.trim())return void console.debug("[STREAM] Received empty message, skipping");try{let r=JSON.parse(o);if("error"===r.status){console.error("[STREAM] Error status received for ".concat(e,":"),r),t.onError(r.message||"Unknown error occurred");return}}catch(e){}if(o.includes("Agent run")&&o.includes("not found in active runs")){console.log("[STREAM] Agent run ".concat(e," not found in active runs, closing stream")),n.add(e),t.onError("Agent run not found in active runs"),l.close(),s.delete(e),t.onClose();return}if(o.includes('"type":"status"')&&o.includes('"status":"completed"')){console.log("[STREAM] Detected completion status message for ".concat(e)),(o.includes("Run data not available for streaming")||o.includes("Stream ended with status: completed"))&&(console.log("[STREAM] Detected final completion message for ".concat(e,", adding to non-running set")),n.add(e)),t.onMessage(o),l.close(),s.delete(e),t.onClose();return}if(o.includes('"type":"status"')&&o.includes('"status_type":"thread_run_end"')){console.log("[STREAM] Detected thread run end message for ".concat(e)),n.add(e),t.onMessage(o),l.close(),s.delete(e),t.onClose();return}t.onMessage(o)}catch(e){console.error("[STREAM] Error handling message:",e),t.onError(e instanceof Error?e:String(e))}},l.onerror=r=>{console.log("[STREAM] EventSource error for ".concat(e,":"),r),v(e).then(r=>{"running"!==r.status?(console.log("[STREAM] Agent run ".concat(e," is not running after error, closing stream")),n.add(e),l.close(),s.delete(e),t.onClose()):console.log("[STREAM] Agent run ".concat(e," is still running after error, keeping stream open"))}).catch(r=>{console.error("[STREAM] Error checking agent status after stream error:",r);let o=r instanceof Error?r.message:String(r);(o.includes("not found")||o.includes("404")||o.includes("does not exist"))&&(console.log("[STREAM] Agent run ".concat(e," not found after error, closing stream")),n.add(e),l.close(),s.delete(e),t.onClose()),t.onError(o)})}})(),()=>{console.log("[STREAM] Cleanup called for ".concat(e));let t=s.get(e);t&&(console.log("[STREAM] Closing stream for ".concat(e)),t.close(),s.delete(e))}}catch(r){return console.error("[STREAM] Error setting up stream for ".concat(e,":"),r),t.onError(r instanceof Error?r:String(r)),t.onClose(),()=>{}}},y=async(e,t)=>{try{let r=(0,o.U)(),{data:{session:n}}=await r.auth.getSession(),s=new URL("".concat(a,"/sandboxes/").concat(e,"/files"));s.searchParams.append("path",t);let c={};(null==n?void 0:n.access_token)&&(c.Authorization="Bearer ".concat(n.access_token));let i=await fetch(s.toString(),{headers:c});if(!i.ok){let e=await i.text().catch(()=>"No error details available");throw console.error("Error listing sandbox files: ".concat(i.status," ").concat(i.statusText),e),Error("Error listing sandbox files: ".concat(i.statusText," (").concat(i.status,")"))}return(await i.json()).files||[]}catch(e){throw console.error("Failed to list sandbox files:",e),e}},k=async(e,t)=>{let r=(0,o.U)(),a={...t},{data:n,error:s}=await r.from("threads").update(a).eq("thread_id",e).select().single();if(s)throw console.error("Error updating thread:",s),Error("Error updating thread: ".concat(s.message));return n},A=async e=>{try{let t=(0,o.U)();console.log("Deleting all agent runs for thread ".concat(e));let{error:r}=await t.from("agent_runs").delete().eq("thread_id",e);if(r)throw console.error("Error deleting agent runs:",r),Error("Error deleting agent runs: ".concat(r.message));console.log("Deleting all messages for thread ".concat(e));let{error:a}=await t.from("messages").delete().eq("thread_id",e);if(a)throw console.error("Error deleting messages:",a),Error("Error deleting messages: ".concat(a.message));console.log("Deleting thread ".concat(e));let{error:n}=await t.from("threads").delete().eq("thread_id",e);if(n)throw console.error("Error deleting thread:",n),Error("Error deleting thread: ".concat(n.message));console.log("Thread ".concat(e," successfully deleted with all related items"))}catch(e){throw console.error("Error deleting thread and related items:",e),e}},x=async e=>{try{let t=(0,o.U)(),{data:{session:r}}=await t.auth.getSession();if(!(null==r?void 0:r.access_token))throw Error("No access token available");if(!a)throw Error("Backend URL is not configured. Set NEXT_PUBLIC_BACKEND_URL in your environment.");console.log("[API] Initiating agent with files using ".concat(a,"/agent/initiate"));let n=await fetch("".concat(a,"/agent/initiate"),{method:"POST",headers:{Authorization:"Bearer ".concat(r.access_token)},body:e,cache:"no-store"});if(!n.ok){let e=await n.text().catch(()=>"No error details available");throw console.error("[API] Error initiating agent: ".concat(n.status," ").concat(n.statusText),e),Error("Error initiating agent: ".concat(n.statusText," (").concat(n.status,")"))}return n.json()}catch(e){if(console.error("[API] Failed to initiate agent:",e),e instanceof TypeError&&e.message.includes("Failed to fetch"))throw Error("Cannot connect to backend server. Please check your internet connection and make sure the backend is running.");throw e}},S=async()=>{try{let e=await fetch("".concat(a,"/health"),{cache:"no-store"});if(!e.ok)throw Error("API health check failed: ".concat(e.statusText));return e.json()}catch(e){throw console.error("API health check failed:",e),e}},T=async e=>{try{let t=(0,o.U)(),{data:{session:r}}=await t.auth.getSession();if(!(null==r?void 0:r.access_token))throw Error("No access token available");let n=await fetch("".concat(a,"/billing/create-checkout-session"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r.access_token)},body:JSON.stringify(e)});if(!n.ok){let e=await n.text().catch(()=>"No error details available");throw console.error("Error creating checkout session: ".concat(n.status," ").concat(n.statusText),e),Error("Error creating checkout session: ".concat(n.statusText," (").concat(n.status,")"))}let s=await n.json();switch(console.log("Checkout session response:",s),s.status){case"upgraded":case"updated":case"downgrade_scheduled":case"scheduled":case"no_change":return s;case"new":case"checkout_created":if(!s.url)throw Error("No checkout URL provided");return s;default:return console.warn("Unexpected status from createCheckoutSession:",s.status),s}}catch(e){throw console.error("Failed to create checkout session:",e),e}},j=async e=>{try{let t=(0,o.U)(),{data:{session:r}}=await t.auth.getSession();if(!(null==r?void 0:r.access_token))throw Error("No access token available");let n=await fetch("".concat(a,"/billing/create-portal-session"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r.access_token)},body:JSON.stringify(e)});if(!n.ok){let e=await n.text().catch(()=>"No error details available");throw console.error("Error creating portal session: ".concat(n.status," ").concat(n.statusText),e),Error("Error creating portal session: ".concat(n.statusText," (").concat(n.status,")"))}return n.json()}catch(e){throw console.error("Failed to create portal session:",e),e}},I=async()=>{try{let e=(0,o.U)(),{data:{session:t}}=await e.auth.getSession();if(!(null==t?void 0:t.access_token))throw Error("No access token available");let r=await fetch("".concat(a,"/billing/subscription"),{headers:{Authorization:"Bearer ".concat(t.access_token)}});if(!r.ok){let e=await r.text().catch(()=>"No error details available");throw console.error("Error getting subscription: ".concat(r.status," ").concat(r.statusText),e),Error("Error getting subscription: ".concat(r.statusText," (").concat(r.status,")"))}return r.json()}catch(e){throw console.error("Failed to get subscription:",e),e}},R=async()=>{try{let e=(0,o.U)(),{data:{session:t}}=await e.auth.getSession();if(!(null==t?void 0:t.access_token))throw Error("No access token available");let r=await fetch("".concat(a,"/billing/check-status"),{headers:{Authorization:"Bearer ".concat(t.access_token)}});if(!r.ok){let e=await r.text().catch(()=>"No error details available");throw console.error("Error checking billing status: ".concat(r.status," ").concat(r.statusText),e),Error("Error checking billing status: ".concat(r.statusText," (").concat(r.status,")"))}return r.json()}catch(e){throw console.error("Failed to check billing status:",e),e}}},30285:(e,t,r)=>{r.d(t,{$:()=>i,r:()=>c});var o=r(95155);r(12115);var a=r(99708),n=r(74466),s=r(59434);let c=(0,n.F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",{variants:{variant:{default:"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",destructive:"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",outline:"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",secondary:"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2 has-[>svg]:px-3",sm:"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",lg:"h-10 rounded-md px-6 has-[>svg]:px-4",icon:"size-9"}},defaultVariants:{variant:"default",size:"default"}});function i(e){let{className:t,variant:r,size:n,asChild:i=!1,...l}=e,d=i?a.DX:"button";return(0,o.jsx)(d,{"data-slot":"button",className:(0,s.cn)(c({variant:r,size:n,className:t})),...l})}},52643:(e,t,r)=>{r.d(t,{U:()=>a});var o=r(81935);let a=()=>{let e="https://jbriwassebxdwoieikga.supabase.co";return e&&!e.startsWith("http")&&(e="http://".concat(e)),(0,o.createBrowserClient)(e,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Impicml3YXNzZWJ4ZHdvaWVpa2dhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzOTMzMjYsImV4cCI6MjA1OTk2OTMyNn0.1iYSZAYGOc0B0-64KzLKwMA3dYNn0enQteikh9_VnDc")}},59434:(e,t,r)=>{r.d(t,{$3:()=>i,Hz:()=>c,cn:()=>s});var o=r(52596),a=r(81949),n=r(39688);function s(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return(0,n.QP)((0,o.$)(t))}let c=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"rgba(180, 180, 180)";if(!e)return t;try{if("string"==typeof e&&e.startsWith("var(")){let t=document.createElement("div");t.style.color=e,document.body.appendChild(t);let r=window.getComputedStyle(t).color;return document.body.removeChild(t),a.formatRGBA(a.parse(r))}return a.formatRGBA(a.parse(e))}catch(e){return console.error("Color parsing failed:",e),t}},i=(e,t)=>e.startsWith("rgb")?a.formatRGBA(a.alpha(a.parse(e),t)):e}}]);